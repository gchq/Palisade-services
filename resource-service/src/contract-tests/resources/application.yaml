# Copyright 2020 Crown Copyright
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

spring:
  application:
    name: resource-service
  output:
    ansi:
      enabled: always
  main:
    allow-bean-definition-overriding: true
  autoconfigure:
    exclude:
     - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
     - org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration
  data:
    redis:
      repositories:
        enabled: false

feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: basic
    default-config: default

server:
  port: 8086

eureka:
  client:
    enabled: false

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      enabled: true

population:
  resourceProvider: std

resource:
  # Available options: simple, hadoop
  implementation: simple
  # If a type for the resource cannot be deduced, use this as the default
  defaultType: java.lang.String

web:
  client:
    data-service: "http://localhost:8082"
    resource-service: "http://localhost:${server.port}"

async:
  webMvcTimeout: 60000
  corePoolSize: 6
