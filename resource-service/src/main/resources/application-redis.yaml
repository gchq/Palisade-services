# Copyright 2018-2021 Crown Copyright
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The time before you start getting cache misses, the traditional sense of TTL.
# Default value should be 24h
#effectiveTtl: 10m

# The maximum time you'd expect the Resource service to process a single request.
# Any request that takes longer to read persistence will see weird errors.
# These errors could be avoided and explicitly managed with akka `.takeDuring(Duration)`.
# Default value could be 1h
#inFlightTtl: 1m

spring:
  autoconfigure:
    exclude:
    - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
  data:
    redis:
      repositories:
        enabled: true
        # Set the TTL on all the repositories that are used within the Resource service using the effectiveTtl and inFlightTtl values defined above
        #timeToLive:
          #CompletenessEntity: ${effectiveTtl}
          #TypeEntity: ${effectiveTtl} + ${inFlightTtl}
          #SerialisedFormatEntity: ${effectiveTtl} + ${inFlightTtl}
          #ResourceEntity: ${effectiveTtl} + 2 * ${inFlightTtl}
  # redis.host/port or redis.cluster.nodes configured by k8s

# TODO: spring-boot 2.2.x has cluster bugs, but 2.3.x has health-check bugs
# Once released, if spring-boot 2.4.x fixes the health-check bugs, re-enable the endpoint here
management:
  health:
    redis:
      enabled: false
