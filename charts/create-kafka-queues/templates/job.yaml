# Copyright 2018-2021 Crown Copyright
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "create-kafka-queues.name" . }}
  namespace: {{ include "palisade.namespace" . }}
  labels:
    app.kubernetes.io/name: {{ include "create-kafka-queues.name" . }}
    helm.sh/chart: {{ include "create-kafka-queues.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  ttlSecondsAfterFinished: 0
  template:
    metadata:
      name: {{ include "create-kafka-queues.name" . }}
      labels:
        app.kubernetes.io/name: {{ include "create-kafka-queues.name" . }}
        helm.sh/chart: {{ include "create-kafka-queues.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      restartPolicy: Never
      initContainers:
      - name: init-wait-for-services
        image: "{{.Values.global.repository}}/{{.Values.image.name}}:{{.Values.image.tag}}"
        command: ["/bin/wait-for-services.sh"]
        args:
        {{- range $index, $service := .Values.waitForServices }}
        - {{ printf "%s:%s:%s" $service.name $service.dest (toString $service.port) }}
        {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{.Values.global.repository}}/{{.Values.image.name}}:{{.Values.image.tag}}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/bin/bash", "/bin/create-topics.sh" ]
        env:
        - name: ZOOKEEPER
          value: {{ .Values.exports.zookeeper | quote }}
        {{- range $key, $val := .Values.kafkaCreateTopics }}
        - name: {{ printf "KAFKATOPIC%d" $key }}
          value: {{ printf "%s %s %s" $val.name ($val.partitions | toString) ($val.replicationFactor | toString)  }}
        {{- end }}
