# Copyright 2020 Crown Copyright
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Originally based on https://github.com/helm/charts/blob/6c85be7b88748171afd17affe8b1b57c66bf66a2/incubator/zookeeper/templates/statefulset.yaml

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "zookeeper.fullname" . }}
  namespace: {{ include "palisade.namespace" . }}
  labels:
    app: {{ template "zookeeper.name" . }}
    chart: {{ template "zookeeper.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: server
spec:
  serviceName: {{ template "zookeeper.headless" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "zookeeper.name" . }}
      release: {{ .Release.Name }}
      component: server
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        app: {{ template "zookeeper.name" . }}
        release: {{ .Release.Name }}
        component: server
        {{- if .Values.podLabels }}
        ## Custom pod labels
        {{- range $key, $value := .Values.podLabels }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- end }}
      {{- if .Values.podAnnotations }}
      annotations:
        ## Custom pod annotations
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
    {{- end }}
    {{- end }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- if .Values.schedulerName }}
      schedulerName: "{{ .Values.schedulerName }}"
      {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
      {{- end }}
      containers:
      - name: zookeeper
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- with .Values.command }}
        command: {{ range . }}
        - {{ . | quote }}
          {{- end }}
        {{- end }}
        ports:
          {{- range $key, $port := .Values.ports }}
        - name: {{ $key }}
          {{- toYaml $port | nindent 10 }}
        {{- end }}
        livenessProbe:
          exec:
            command:
            - sh
            - /config-scripts/ok
          initialDelaySeconds: 20
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 2
          successThreshold: 1
        readinessProbe:
          exec:
            command:
            - sh
            - /config-scripts/ready
          initialDelaySeconds: 20
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 2
          successThreshold: 1
        env:
        - name: ZK_REPLICAS
          value: {{ .Values.replicaCount | quote }}
          {{- range $key, $value := .Values.env }}
        - name: {{ $key | upper | replace "." "_" }}
          value: {{ $value | quote }}
          {{- end }}
          {{- range $secret := .Values.secrets }}
          {{- range $key := $secret.keys }}
        - name: {{ (print $secret.name "_" $key) | upper }}
          valueFrom:
            secretKeyRef:
              name: {{ $secret.name }}
              key: {{ $key }}
        {{- end }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - name: {{ .Values.global.persistence.zookeeper.name }}
          mountPath: /data
          {{- range $secret := .Values.secrets }}
          {{- if $secret.mountPath }}
          {{- range $key := $secret.keys }}
        - name: {{ $.Release.Name }}-{{ $secret.name }}
          mountPath: {{ $secret.mountPath }}/{{ $key }}
          subPath: {{ $key }}
          readOnly: true
          {{- end }}
          {{- end }}
          {{- end }}
        - name: config
          mountPath: /config-scripts
        {{- if .Values.exporters.jmx.enabled }}
      - name: jmx-exporter
        image: "{{ .Values.exporters.jmx.image.repository }}:{{ .Values.exporters.jmx.image.tag }}"
        imagePullPolicy: {{ .Values.exporters.jmx.image.pullPolicy }}
        ports:
          {{- range $key, $port := .Values.exporters.jmx.ports }}
        - name: {{ $key }}
          {{- toYaml $port | indent 10 }}
        {{- end }}
        livenessProbe:
          {{- toYaml .Values.exporters.jmx.livenessProbe | indent 10 }}
        readinessProbe:
          {{- toYaml .Values.exporters.jmx.readinessProbe | indent 10 }}
        env:
        - name: SERVICE_PORT
          value: {{ .Values.exporters.jmx.ports.jmxxp.containerPort | quote }}
          {{- with .Values.exporters.jmx.env }}
          {{- range $key, $value := . }}
        - name: {{ $key | upper | replace "." "_" }}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}
        resources:
          {{- toYaml .Values.exporters.jmx.resources | indent 10 }}
        volumeMounts:
        - name: config-jmx-exporter
          mountPath: /opt/jmx_exporter/config.yml
          subPath: config.yml
        {{- end }}
        {{- if .Values.exporters.zookeeper.enabled }}
      - name: zookeeper-exporter
        image: "{{ .Values.exporters.zookeeper.image.repository }}:{{ .Values.exporters.zookeeper.image.tag }}"
        imagePullPolicy: {{ .Values.exporters.zookeeper.image.pullPolicy }}
        args:
        - "-bind-addr=:"{{ .Values.exporters.zookeeper.ports.zookeeperxp.containerPort }}
        - "-metrics-path="{{ .Values.exporters.zookeeper.path }}
        - "-zookeeper=localhost:"{{ .Values.ports.client.containerPort }}
        - "-log-level="{{ .Values.exporters.zookeeper.config.logLevel }}
        - "-reset-on-scrape="{{ .Values.exporters.zookeeper.config.resetOnScrape }}
        ports:
          {{- range $key, $port := .Values.exporters.zookeeper.ports }}
        - name: {{ $key }}
          {{- toYaml $port | indent 10 }}
        {{- end }}
        livenessProbe:
          {{- toYaml .Values.exporters.zookeeper.livenessProbe | indent 10 }}
        readinessProbe:
          {{- toYaml .Values.exporters.zookeeper.readinessProbe | indent 10 }}
        env:
          {{- range $key, $value := .Values.exporters.zookeeper.env }}
        - name: {{ $key | upper | replace "." "_" }}
          value: {{ $value | quote }}
        {{- end }}
        resources:
          {{- toYaml .Values.exporters.zookeeper.resources | indent 10 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | indent 8 }}
      {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ template "zookeeper.fullname" . }}
          defaultMode: 0555
        {{- range .Values.secrets }}
      - name: {{ $.Release.Name }}-{{ .name }}
        secret:
          secretName: {{ .name }}
        {{- end }}
        {{- if .Values.exporters.jmx.enabled }}
      - name: config-jmx-exporter
        configMap:
          name: {{ .Release.Name }}-jmx-exporter
        {{- end }}
        {{- if not .Values.persistence.enabled }}
      - name: {{ .Values.global.persistence.zookeeper.name }}
        emptyDir: {}
        {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.global.persistence.zookeeper.name }}
    spec:
      accessModes:
      - ReadWriteMany
      resources:
        requests:
          storage: {{ $.Values.global.persistence.zookeeper.storage }}
      storageClassName: {{- pluck .Values.global.hosting .Values.global.persistence.zookeeper.storageClassName | first | default .Values.global.persistence.zookeeper.storageClassName._default | indent 1 }}
