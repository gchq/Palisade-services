# Copyright 2020 Crown Copyright
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Create a number of persistent volumes for each configured data-store
# New PVC for each dataStores entry
# The palisade-classpath-jars PV is set to a reclaim policy of DELETE
# In the future we may want to set the reclaim policy to RETAIN
# In the situation where a helm upgrade makes a modification to the PV
# then we need to force the PVC to also be deleted.
# hence we need to hash or sha the PV as an annotation

#N.B The datastore would theoretically only need accessMode ReadOnlyMany
#however, the CSI driver's plugin GetVolumeHandle method determines whether
#the volume is actually used by other pods as a different mode
#there is quite a good explanation here: https://github.com/kubernetes-sigs/aws-efs-csi-driver/issues/100
#as to the slightly anomalous behaviour

{{- $namespace := include "palisade.namespace" . }}
{{- range $name, $value := .Values.global.persistence.dataStores }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ $name }}
  labels:
    "app.kubernetes.io/managed-by": "{{ $.Release.Service }}"
    "app.kubernetes.io/instance": "{{ $.Release.Name }}"
    "helm.sh/chart": "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
  namespace: {{ $namespace }}
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: {{ $value.storage }}
  {{- $sc := index $.Values "global" "persistence" "dataStores" $name "storageClassName" $.Values.global.hosting }}
  {{- $default := index $.Values "global" "persistence" "dataStores" $name "storageClassName" "_default" }}
  storageClassName: {{- $sc | default $default | indent 1 }}
  selector:
    matchLabels:
      selectorFilter: {{ $name }}-{{ $namespace }}
{{- end }}