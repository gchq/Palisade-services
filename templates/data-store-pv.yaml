# Copyright 2018-2021 Crown Copyright
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Create a number of persistent volumes for each configured data-store
# New PV for each dataStores entry

# N.B The datastore would theoretically only need accessMode ReadOnlyMany
# however, the CSI driver's plugin GetVolumeHandle method determines whether
# the volume is actually used by other pods as a different mode
# there is quite a good explanation here: https://github.com/kubernetes-sigs/aws-efs-csi-driver/issues/100
# as to the slightly anomalous behaviour

{{- $namespace := include "palisade.namespace" . }}
{{- range $name, $value := .Values.global.persistence.dataStores }}
{{- $provisioning := pluck $.Values.global.hosting $value.provisioning | first | default $value.provisioning._default }}
{{- if eq $provisioning "static" }}
{{- $sc := pluck $.Values.global.hosting $value.storageClassName | first | default $value.storageClassName._default }}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ $name }}-{{ $namespace }}
  labels:
    selectorFilter: {{ $name }}-{{ $namespace }}
    {{- if eq $sc "ebs-sc" }}
    type: amazonEBS
    {{- else if eq $sc "efs-sc" }}
    type: amazonEFS
    {{- end }}
  annotations:
    "helm.sh/hook": "pre-install"
spec:
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: {{ pluck $.Values.global.hosting $value.storageClassName | first | default $value.storageClassName._default }}
  capacity:
    storage: 4Gi
  {{- if eq $sc "hostpath" }}
  hostPath:
    path: {{ $value.local.hostPath }}
    type: DirectoryOrCreate
  {{- else if eq $sc "efs-sc" }}
  volumeMode: Filesystem
  csi:
    driver: efs.csi.aws.com
    volumeHandle: {{ required "A valid AWS EFS volume handle must be specified" $value.aws.volumeHandle }}:{{ $value.aws.volumePath }}
  {{- end }}
---
{{- end }}
{{- end }}