# Copyright 2020 Crown Copyright

#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

spring:
  profiles:
    include:
      - palisade
      - eureka-config

# Spring profile dependency resolution forces this two-profile setup
# `eureka` profile must forcibly override its dependencies as spring.profiles.include properties can no longer be overridden
# So, include `eureka-config` along with dependencies and force correct override order to happen there
---

spring:
  profiles: eureka-config

manager:
  schedule:
    - palisade-task

  services:
    audit-service:
      profiles:
        - eureka
      err: audit-service.err

    data-service:
      profiles:
        - eureka
      err: data-service.err

    palisade-service:
      profiles:
        - eureka
      err: palisade-service.err

    policy-service:
      profiles:
        - eureka
      err: policy-service.err

    resource-service:
      profiles:
        - eureka
      err: resource-service.err

    user-service:
      profiles:
        - eureka
      err: user-service.err

# Eureka config
eureka:
  instance:
    hostname: localhost
    port: 8083
    preferIpAddress: false
    lease-renewal-interval-in-seconds: 5
  client:
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${eureka.instance.port}/eureka/
    enabled: true
    fetch-registry: true
    registry-fetch-interval-seconds: 5

# Eureka discovery by lookup for registered service by name
# i.e. map from what-i-call-a-service -> what-that-service-calls-itself
web:
  client:
    audit-service:
      - audit-service
    data-service:
      - data-service
    palisade-service:
      - palisade-service
    policy-service:
      - policy-service
    resource-service:
      - resource-service
    user-service:
      - user-service
